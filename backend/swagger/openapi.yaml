openapi: 3.0.0

info:
  title: Auction API
  description: |
    API for managing auctions and bidding processes. This API allows you to:
    * Create and manage auctions
    * Place bids and track bidding history
    * Manage bidders and their information
    * Export auction data
  version: 1.0.0
  contact:
    email: support@auction-app.com

servers:
  - url: http://localhost:8080
    description: Local development server

tags:
  - name: auctions
    description: Auction management operations
  - name: bids
    description: Bidding operations
  - name: bidders
    description: Bidder management
  - name: system
    description: System operations

components:
  schemas:
    Auction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          minLength: 3
          maxLength: 100
        createdAt:
          type: string
          format: date-time
        startingPrice:
          type: integer
          minimum: 1
        priceStep:
          type: integer
          minimum: 1
        currentRound:
          type: integer
        highestBid:
          type: integer
        highestBidder:
          type: string
        status:
          type: string
          enum: [notStarted, inProgress, completed]
        bidders:
          type: array
          items:
            $ref: '#/components/schemas/Bidder'
        bidHistory:
          type: array
          items:
            $ref: '#/components/schemas/Bid'

    Bidder:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        address:
          type: string

    Bid:
      type: object
      properties:
        round:
          type: integer
        bidderId:
          type: string
        bidderName:
          type: string
        amount:
          type: integer
        timestamp:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        error:
          type: string

paths:
  /health:
    get:
      tags:
        - system
      summary: Health check endpoint
      description: Check if the API is up and running
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: 1.0.0

  /api/v1/auctions:
    post:
      tags:
        - auctions
      summary: Create a new auction
      description: Create a new auction with the specified details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - startingPrice
                - priceStep
              properties:
                title:
                  type: string
                  minLength: 3
                  maxLength: 100
                startingPrice:
                  type: integer
                  minimum: 1
                priceStep:
                  type: integer
                  minimum: 1
      responses:
        '201':
          description: Auction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auction'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - auctions
      summary: Get all auctions
      description: Retrieve a list of all auctions
      responses:
        '200':
          description: List of auctions
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Auction'

  /api/v1/auctions/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - auctions
      summary: Get auction details
      description: Retrieve details of a specific auction
      responses:
        '200':
          description: Auction details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auction'
        '404':
          description: Auction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/auctions/{id}/start:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    put:
      tags:
        - auctions
      summary: Start an auction
      description: Start a specific auction, allowing bids to be placed
      responses:
        '200':
          description: Auction started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auction'
        '400':
          description: Invalid request or auction state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Auction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/auctions/{id}/end:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    put:
      tags:
        - auctions
      summary: End an auction
      description: End a specific auction, preventing further bids
      responses:
        '200':
          description: Auction ended successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auction'
        '400':
          description: Invalid request or auction state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Auction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/auctions/{id}/bids:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - bids
      summary: Place a bid
      description: Place a bid in a specific auction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bidderId
                - amount
              properties:
                bidderId:
                  type: string
                amount:
                  type: integer
                  minimum: 1
      responses:
        '200':
          description: Bid placed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bid'
        '400':
          description: Invalid bid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Auction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/auctions/{id}/bids/current:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - bids
      summary: Get current bids
      description: Get the current round's bids for a specific auction
      responses:
        '200':
          description: Current bids
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bid'
                  highestBid:
                    type: integer
                  highestBidder:
                    type: string
                  currentRound:
                    type: integer
        '404':
          description: Auction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/auctions/{id}/bids/history:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - bids
      summary: Get bid history
      description: Get the complete bid history for a specific auction
      responses:
        '200':
          description: Bid history
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bid'
        '404':
          description: Auction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/auctions/{id}/bidders:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    put:
      tags:
        - bidders
      summary: Set bidders for an auction
      description: Set the list of allowed bidders for a specific auction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bidders
              properties:
                bidders:
                  type: array
                  items:
                    $ref: '#/components/schemas/Bidder'
      responses:
        '200':
          description: Bidders set successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Bidders updated successfully"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Auction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/auctions/{id}/export:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - auctions
      summary: Export auction data
      description: Export auction data in Excel format
      responses:
        '200':
          description: Excel file containing auction data
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        '404':
          description: Auction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Invalid request or auction state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/bidders:
    get:
      tags:
        - bidders
      summary: Get all bidders
      description: Retrieve a list of all registered bidders
      responses:
        '200':
          description: List of bidders
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bidder'

    post:
      tags:
        - bidders
      summary: Add a new bidder
      description: Register a new bidder in the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - address
              properties:
                name:
                  type: string
                address:
                  type: string
      responses:
        '201':
          description: Bidder created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bidder'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - bidders
      summary: Update bidders
      description: Update multiple bidders at once
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bidders
              properties:
                bidders:
                  type: array
                  items:
                    $ref: '#/components/schemas/Bidder'
      responses:
        '200':
          description: Bidders updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Bidders updated successfully"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/bidders/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    delete:
      tags:
        - bidders
      summary: Delete a bidder
      description: Remove a bidder from the system
      responses:
        '200':
          description: Bidder deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Bidder deleted successfully"
        '404':
          description: Bidder not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/bidders/import:
    post:
      tags:
        - bidders
      summary: Import bidders from Excel
      description: Upload an Excel file containing bidder information
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Bidders imported successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Bidders imported successfully"
                  count:
                    type: integer
                    example: 10
        '400':
          description: Invalid file or format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
